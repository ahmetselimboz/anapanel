name: Laravel CI/CD to cPanel (MAX SPEED - ZIP TRANSFER)

on:
  push:
    branches:
      - main 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # Commit mesajında [build] ifadesi varsa True olur.
    env:
      SHOULD_BUILD: ${{ contains(github.event.head_commit.message, '[build]') }}
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ----------------- BUILD AŞAMASI (SADECE [build] VARSA) -----------------

      - name: Setup PHP and Node.js (If Build Required)
        if: env.SHOULD_BUILD == 'true'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, bcmath
          tools: composer

      - name: Install Composer & NPM Dependencies
        if: env.SHOULD_BUILD == 'true'
        run: |
          npm install
          composer install --no-scripts

      - name: Build Frontend Assets
        if: env.SHOULD_BUILD == 'true'
        run: npm run build

      - name: Compress Build Files to ZIP
        if: env.SHOULD_BUILD == 'true'
        run: |
          # SADECE vendor, node_modules ve public klasörlerini sıkıştırır
          zip -r deployment_assets.zip vendor node_modules public 
          
      # ----------------- TRANSFER AŞAMASI -----------------

      - name: Optimized FTP Deploy (Sync Source Code & ZIP)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: sftp 
          server-dir: /plugin.medyayazilimlari.com/
          
          # vendor, node_modules ve public klasörlerini ZIP dosyası yerine göndermemek için hariç tutarız
          # Ancak deployment_assets.zip dosyasının hariç tutulmadığından emin olun!
          exclude: |
            .git
            .github
            .DS_Store
            .env
            /vendor/** /node_modules/** /public/** # Public klasörünü de ZIP'e dahil ettik
            

      # ----------------- SUNUCUDA ÇALIŞTIRMA AŞAMASI -----------------

      - name: Trigger Server Unzip & Artisan Commands
        run: |
          echo "Triggering server commands..."
          # Bu URL, sunucudaki PHP scriptinizi çağırır.
          curl -X GET "https://plugin.medyayazilimlari.com/deploy?token=${{ secrets.DEPLOY_TOKEN }}"